<span class="peppy">(ap)<b>P</b>roximated (x)<b>E</b>macs <b>P</b>owered by <b>Py</b>thon.</span>

<P>-- an XEmacs-like editor in Python.  Eventually.

<P>Latest version: $version "$codename".  <a href="download.html">Download here</a>

<h3>Why Another Editor?</h3>

<P>Peppy is not just another editor.  While it does emphasize source code
editing, it's also an extensible framework in Python that can support editing
and viewing many different types of files, not <emph>just</emph> text files.

<P>It's not a minimalist editor, nor is it quite the kitchen sink of Emacs (it's
never going to read mail).  It is powerful, but that power is hidden behind
a familiar GUI.  It's easy to get started because most commands are available
using the menu and tool bars.  More advanced use is possible through key
bindings, but it's not necessary to memorize keystrokes to start using peppy.

<P>Here are some features you won't find in your typical Python based editor:


<h3><img src="peppy-icon-16.png"> Multiple Top-Level Windows</h3>

<p>Multiple views of the same file are kept in sync (edit in one view and changes are reflected in realtime in the others, even if the others are different major modes!)

<p><img src="multiple-top-level-windows.png" alt="image of two top-level windows"/>

<br>
<br>

<h3><img src="peppy-icon-16.png"> Python Regular Expression Search and Replace</h3>

<P>Including extended replace functionality to alter the case of matched strings.

<p><img src="python-regex.png" alt="python regular expression replace"/>

<br>
<br>

<h3><img src="peppy-icon-16.png"> Spell Check On The Fly</h3>

<P>When using the optional module <a
href="http://pyenchant.sourceforge.net">pyenchant</a>, spelling mistakes are
highlighted as you type.

<p><img src="spell-check.png" alt="wavy-lines under spelling mistakes"/>

<br>
<br>

<h3><img src="peppy-icon-16.png"> Edit Files in Binary Mode</h3>

<p>Your edits in binary mode are reflected in other views of the same file.

<p><img src="hex-edit.png" alt="binary view of a png file"/>

<br>
<br>

<h3><img src="peppy-icon-16.png"> Other Major Modes (Music Player Daemon, View Hyperspectral Images)</h3>

<p>Control a <a href="http://mpd.wikia.com/wiki/Main_Page">Music Player
Daemon</a> server.  View hyperspectral images (built-in ENVI image loader, optional <a href="http://gdal.osgeo.org/">GDAL</a> support).

<p><img src="cool-major-modes.png" alt="mpd mode, hyperspectral mode"/>

<br>



<h3><img src="peppy-icon-16.png"> Other Features</h3>

<ul>
<li>Same interface on Unix, Windows, and OSX thanks to <a href="http://www.wxpython.org">wxPython</a>
<li>Multiple language support: Python mode is very well supported, baseline implementations of C/C++/Java, Makefile, and Shell major modes
<li>Syntax highlighting using the Scintilla styling code from <a href="http://www.editra.org">Editra</a>
<li>Autoindenting of source code, including a <a href="http://www.alweb.dk/blog/anders/autoindentation">regex-based autoindenter</a> based on KDE's Kate
<li>Built-in class browser to display list of functions and methods in code
<li>Customizable key bindings
<li>GUI adapts itself to the editing mode
<li>Virtual file system abstraction layer based on <a href="http://www.ikaaro.org/itools/">itools.vfs</a>, allowing transparent file loads from the local file system, http URLs, and from within tar archives without uncompressing the archive beforehand.
<li>Minibuffer ala XEmacs, including tab completion
<li>Extensible through <a href="http://code.google.com/p/peppy/">plugins</a>
<li>Internationalized, and can even switch languages on the fly
<li>Other interesting major modes:
<ul>
<li>Dired mode for viewing directories
<li>Eliza and other psychotherapists
<li>Mandelbrot set explorer using Ned Batchelder's <a href="http://nedbatchelder.com/code/aptus/">Aptus</a> engine
<li>Hangman word guessing game
</ul>
</ul>


<h3>Help Wanted</h3>

<h4>Mac OSX</h4>

<P>I'm especially interested in help with the Mac OSX testing.  I regularly
test on Windows and Linux, but only have limited access to a Mac.  I'd
appreciate any help in debugging on the Mac, as I believe there's still a
problem in the keyboard handling on OSX.

<h4>Localization</h4>

<P>Additionally, if you speak languages other than English, the i18n work is
hosted at

<a href="https://translations.launchpad.net/peppy/trunk/+pots/peppy">launchpad</a>

using their collaborative translation feature.  I could definitely use the help
getting peppy localized in your language, as my only language skills include a
tiny bit to contribute to the

<a href="http://www.esperanto-usa.org/">Esperanto</a>

localization (mi havas eta vortprovizon de esperanto) and knowing the word for
'beer' in numerous languages.

<h3>Mailing List</h3>

<P>There's now a <a href="http://groups.google.com/group/peppy-dev">mailing
list</a> for peppy development.  All people interested in the development
of peppy are welcome to join.  You can also sign up by sending an email to
<b>peppy-dev-subscribe [at] googlegroups [dot] com</b> from the account you
wish to use (useful for signing up with a non-gmail account).

<h3>License</h3>

<P>The application as a whole is licensed under the GPLv3 due to the inclusion
of <a href="http://www.ikaaro.org/itools/">itools</a>.  The bulk of the code
in peppy was written by me and is also available under either the GPLv2 or
wxWidgets depending on the individual source file.  Consult the header of each
file for the specific license.

<P>So, if you're going to borrow the whole application, it's under the GPLv3.
However, if you're just going to borrow an individual source file from
one of the files that I've written outside of itools, you get to choose the
license from one of the following dual license pairs: either GPLv2/GPLv3 or
wxWidgets/GPLv3.
